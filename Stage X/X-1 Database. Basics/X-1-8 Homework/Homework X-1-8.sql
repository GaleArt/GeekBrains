-- 1-3 задания кодом, 4 - скриншот!!!
--
-- 1. Выполнено. Оставил еще количество потоков чтобы легче было проверять.
SELECT DISTINCT
courses.name,
COUNT(courses.id) OVER(PARTITION BY streams.course_id) AS course,
SUM(number) OVER(PARTITION BY courses.id) AS students
FROM streams
LEFT JOIN courses
ON streams.course_id = courses.id
ORDER BY courses.id;
-- 2. Найдите среднюю оценку по всем потокам для всех учителей. В отчёт выведите идентификатор, фамилию и имя учителя,
-- среднюю оценку по всем проведённым потокам. Учителя, у которых не было потоков, также должны попасть в выборку.
-- Решите задание с применением оконных функций.
-- 3. Какие индексы надо создать для максимально быстрого выполнения представленного запроса?
--
-- SELECT
-- surname,
-- name,
-- number,
-- performance
-- FROM academic_performance
-- JOIN teachers
-- ON academic_performance.teacher_id = teachers.id
-- JOIN streams
-- ON academic_performance.stream_id = streams.id
-- WHERE number >= 200;
--
-- 4. Установите SQLiteStudio, подключите базу данных учителей, выполните в графическом клиенте любой запрос.

-- 5. Дополнительное задание. Для каждого преподавателя выведите имя, фамилию, минимальное значение успеваемости
-- по всем потокам преподавателя, название курса, который соответствует потоку с минимальным значением успеваемости, максимальное
-- значение успеваемости по всем потокам преподавателя, название курса, соответствующий потоку с максимальным значением успеваемости.
-- Выполните задачу с использованием оконных функций.
